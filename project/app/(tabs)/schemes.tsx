import { View, Text, StyleSheet, TouchableOpacity, ScrollView } from 'react-native';
import { Ionicons } from '@expo/vector-icons';
import { useState } from 'react';

export default function SchemesScreen() {
  const [selectedCategory, setSelectedCategory] = useState('‡§∏‡§≠‡•Ä');

  const categories = ['‡§∏‡§≠‡•Ä', '‡§≤‡•ã‡§®', '‡§¨‡•Ä‡§Æ‡§æ', '‡§∏‡§¨‡•ç‡§∏‡§ø‡§°‡•Ä', '‡§™‡•ç‡§∞‡§∂‡§ø‡§ï‡•ç‡§∑‡§£'];

  const schemes = [
    {
      id: '1',
      title: '‡§™‡•ç‡§∞‡§ß‡§æ‡§®‡§Æ‡§Ç‡§§‡•ç‡§∞‡•Ä ‡§ï‡§ø‡§∏‡§æ‡§® ‡§∏‡§Æ‡•ç‡§Æ‡§æ‡§® ‡§®‡§ø‡§ß‡§ø',
      category: '‡§∏‡§¨‡•ç‡§∏‡§ø‡§°‡•Ä',
      description: '‡§õ‡•ã‡§ü‡•á ‡§î‡§∞ ‡§∏‡•Ä‡§Æ‡§æ‡§Ç‡§§ ‡§ï‡§ø‡§∏‡§æ‡§®‡•ã‡§Ç ‡§ï‡•ã ‡§™‡•ç‡§∞‡§§‡§ø ‡§µ‡§∞‡•ç‡§∑ 6000 ‡§∞‡•Å‡§™‡§Ø‡•á ‡§ï‡•Ä ‡§Ü‡§∞‡•ç‡§•‡§ø‡§ï ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ‡•§ ‡§Ø‡§π ‡§∞‡§æ‡§∂‡§ø ‡§§‡•Ä‡§® ‡§¨‡§∞‡§æ‡§¨‡§∞ ‡§ï‡§ø‡§∏‡•ç‡§§‡•ã‡§Ç ‡§Æ‡•á‡§Ç ‡§¶‡•Ä ‡§ú‡§æ‡§§‡•Ä ‡§π‡•à‡•§',
      eligibility: '‡§≠‡•Ç‡§Æ‡§ø ‡§ï‡§æ ‡§Æ‡§æ‡§≤‡§ø‡§ï ‡§π‡•ã‡§®‡§æ ‡§ú‡§∞‡•Ç‡§∞‡•Ä, 2 ‡§π‡•á‡§ï‡•ç‡§ü‡•á‡§Ø‡§∞ ‡§§‡§ï ‡§ú‡§Æ‡•Ä‡§®',
      benefits: '‚Çπ6,000 ‡§™‡•ç‡§∞‡§§‡§ø ‡§µ‡§∞‡•ç‡§∑',
      documents: ['‡§Ü‡§ß‡§æ‡§∞ ‡§ï‡§æ‡§∞‡•ç‡§°', '‡§¨‡•à‡§Ç‡§ï ‡§™‡§æ‡§∏‡§¨‡•Å‡§ï', '‡§≠‡•Ç‡§Æ‡§ø ‡§¶‡§∏‡•ç‡§§‡§æ‡§µ‡•á‡§ú'],
      apply: 'https://pmkisan.gov.in',
      isNew: false
    },
    {
      id: '2',
      title: '‡§™‡•ç‡§∞‡§ß‡§æ‡§®‡§Æ‡§Ç‡§§‡•ç‡§∞‡•Ä ‡§´‡§∏‡§≤ ‡§¨‡•Ä‡§Æ‡§æ ‡§Ø‡•ã‡§ú‡§®‡§æ',
      category: '‡§¨‡•Ä‡§Æ‡§æ',
      description: '‡§™‡•ç‡§∞‡§æ‡§ï‡•É‡§§‡§ø‡§ï ‡§Ü‡§™‡§¶‡§æ‡§ì‡§Ç ‡§∏‡•á ‡§´‡§∏‡§≤ ‡§®‡•Å‡§ï‡§∏‡§æ‡§® ‡§ï‡•Ä ‡§∏‡•ç‡§•‡§ø‡§§‡§ø ‡§Æ‡•á‡§Ç ‡§ï‡§ø‡§∏‡§æ‡§®‡•ã‡§Ç ‡§ï‡•ã ‡§¨‡•Ä‡§Æ‡§æ ‡§∞‡§æ‡§∂‡§ø‡•§ ‡§ï‡§Æ ‡§™‡•ç‡§∞‡•Ä‡§Æ‡§ø‡§Ø‡§Æ ‡§™‡§∞ ‡§µ‡•ç‡§Ø‡§æ‡§™‡§ï ‡§ï‡§µ‡§∞‡•á‡§ú ‡§Æ‡§ø‡§≤‡§§‡§æ ‡§π‡•à‡•§',
      eligibility: '‡§∏‡§≠‡•Ä ‡§ï‡§ø‡§∏‡§æ‡§® (‡§Æ‡§æ‡§≤‡§ø‡§ï ‡§î‡§∞ ‡§ï‡§ø‡§∞‡§æ‡§è‡§¶‡§æ‡§∞ ‡§¶‡•ã‡§®‡•ã‡§Ç)',
      benefits: '‡§´‡§∏‡§≤ ‡§ï‡•Ä ‡§≤‡§æ‡§ó‡§§ ‡§ï‡§æ ‡§™‡•Ç‡§∞‡§æ ‡§Æ‡•Å‡§Ü‡§µ‡§ú‡§æ',
      documents: ['‡§Ü‡§ß‡§æ‡§∞ ‡§ï‡§æ‡§∞‡•ç‡§°', '‡§¨‡•à‡§Ç‡§ï ‡§™‡§æ‡§∏‡§¨‡•Å‡§ï', '‡§≠‡•Ç‡§Æ‡§ø ‡§¶‡§∏‡•ç‡§§‡§æ‡§µ‡•á‡§ú', '‡§¨‡•Å‡§Ü‡§à ‡§™‡•ç‡§∞‡§Æ‡§æ‡§£ ‡§™‡§§‡•ç‡§∞'],
      apply: 'https://pmfby.gov.in',
      isNew: false
    },
    {
      id: '3',
      title: '‡§ï‡§ø‡§∏‡§æ‡§® ‡§ï‡•ç‡§∞‡•á‡§°‡§ø‡§ü ‡§ï‡§æ‡§∞‡•ç‡§°',
      category: '‡§≤‡•ã‡§®',
      description: '‡§ï‡•É‡§∑‡§ø ‡§î‡§∞ ‡§∏‡§Ç‡§¨‡§¶‡•ç‡§ß ‡§ó‡§§‡§ø‡§µ‡§ø‡§ß‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ü‡§∏‡§æ‡§® ‡§ã‡§£‡•§ ‡§´‡§∏‡§≤ ‡§ï‡•Ä ‡§ñ‡•á‡§§‡•Ä ‡§∏‡•á ‡§≤‡•á‡§ï‡§∞ ‡§Æ‡§õ‡§≤‡•Ä ‡§™‡§æ‡§≤‡§® ‡§§‡§ï ‡§ï‡•á ‡§≤‡§ø‡§è ‡§µ‡§ø‡§§‡•ç‡§§‡•Ä‡§Ø ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ‡•§',
      eligibility: '‡§∏‡§≠‡•Ä ‡§ï‡§ø‡§∏‡§æ‡§® (‡§µ‡•ç‡§Ø‡§ï‡•ç‡§§‡§ø‡§ó‡§§/‡§∏‡§Ç‡§Ø‡•Å‡§ï‡•ç‡§§ ‡§ñ‡•á‡§§‡•Ä ‡§ï‡§∞‡§®‡•á ‡§µ‡§æ‡§≤‡•á)',
      benefits: '3 ‡§≤‡§æ‡§ñ ‡§§‡§ï ‡§¨‡§ø‡§®‡§æ ‡§ó‡§æ‡§∞‡§Ç‡§ü‡•Ä, ‡§ï‡§Æ ‡§¨‡•ç‡§Ø‡§æ‡§ú ‡§¶‡§∞',
      documents: ['‡§Ü‡§ß‡§æ‡§∞ ‡§ï‡§æ‡§∞‡•ç‡§°', '‡§™‡•à‡§® ‡§ï‡§æ‡§∞‡•ç‡§°', '‡§≠‡•Ç‡§Æ‡§ø ‡§¶‡§∏‡•ç‡§§‡§æ‡§µ‡•á‡§ú', '‡§™‡§æ‡§∏‡§™‡•ã‡§∞‡•ç‡§ü ‡§´‡•ã‡§ü‡•ã'],
      apply: '‡§®‡§ú‡§¶‡•Ä‡§ï‡•Ä ‡§¨‡•à‡§Ç‡§ï',
      isNew: false
    },
    {
      id: '4',
      title: '‡§™‡•Ä‡§è‡§Æ-‡§ï‡§ø‡§∏‡§æ‡§® FPO ‡§Ø‡•ã‡§ú‡§®‡§æ',
      category: '‡§™‡•ç‡§∞‡§∂‡§ø‡§ï‡•ç‡§∑‡§£',
      description: '‡§ï‡§ø‡§∏‡§æ‡§® ‡§â‡§§‡•ç‡§™‡§æ‡§¶‡§ï ‡§∏‡§Ç‡§ó‡§†‡§®‡•ã‡§Ç ‡§ï‡•ã ‡§¨‡§¢‡§º‡§æ‡§µ‡§æ ‡§¶‡•á‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è‡•§ ‡§∏‡§æ‡§Æ‡•Ç‡§π‡§ø‡§ï ‡§ñ‡•á‡§§‡•Ä ‡§î‡§∞ ‡§Æ‡§æ‡§∞‡•ç‡§ï‡•á‡§ü‡§ø‡§Ç‡§ó ‡§ï‡•á ‡§≤‡§ø‡§è ‡§µ‡§ø‡§§‡•ç‡§§‡•Ä‡§Ø ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ‡•§',
      eligibility: '‡§ï‡§ø‡§∏‡§æ‡§® ‡§â‡§§‡•ç‡§™‡§æ‡§¶‡§ï ‡§∏‡§Ç‡§ó‡§†‡§® (FPO)',
      benefits: '‚Çπ15 ‡§≤‡§æ‡§ñ ‡§§‡§ï ‡§ï‡•Ä ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ',
      documents: ['FPO ‡§∞‡§ú‡§ø‡§∏‡•ç‡§ü‡•ç‡§∞‡•á‡§∂‡§®', '‡§∏‡§¶‡§∏‡•ç‡§Ø‡•ã‡§Ç ‡§ï‡•Ä ‡§∏‡•Ç‡§ö‡•Ä', '‡§¨‡•à‡§Ç‡§ï ‡§ñ‡§æ‡§§‡§æ'],
      apply: 'https://sfac.in',
      isNew: true
    }
  ];

  const filteredSchemes = selectedCategory === '‡§∏‡§≠‡•Ä' 
    ? schemes 
    : schemes.filter(scheme => scheme.category === selectedCategory);

  const speakScheme = (scheme: any) => {
    // Placeholder for Text-to-Speech functionality
    console.log('Speaking scheme:', scheme.title);
  };

  return (
    <ScrollView style={styles.container} showsVerticalScrollIndicator={false}>
      {/* Header */}
      <View style={styles.header}>
        <Text style={styles.title}>‡§∏‡§∞‡§ï‡§æ‡§∞‡•Ä ‡§Ø‡•ã‡§ú‡§®‡§æ‡§è‡§Ç</Text>
        <Text style={styles.subtitle}>‡§ï‡§ø‡§∏‡§æ‡§®‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§∏‡§∞‡§ï‡§æ‡§∞‡•Ä ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ</Text>
      </View>

      {/* Category Filter */}
      <View style={styles.section}>
        <Text style={styles.sectionTitle}>‡§∂‡•ç‡§∞‡•á‡§£‡•Ä ‡§ö‡•Å‡§®‡•á‡§Ç:</Text>
        <ScrollView horizontal showsHorizontalScrollIndicator={false} style={styles.categoryScroll}>
          {categories.map((category) => (
            <TouchableOpacity
              key={category}
              style={[
                styles.categoryChip,
                selectedCategory === category && styles.selectedCategoryChip
              ]}
              onPress={() => setSelectedCategory(category)}
            >
              <Text style={[
                styles.categoryText,
                selectedCategory === category && styles.selectedCategoryText
              ]}>
                {category}
              </Text>
            </TouchableOpacity>
          ))}
        </ScrollView>
      </View>

      {/* Schemes List */}
      <View style={styles.section}>
        {filteredSchemes.map((scheme) => (
          <View key={scheme.id} style={styles.schemeCard}>
            <View style={styles.schemeHeader}>
              <View style={styles.schemeTitleContainer}>
                <Text style={styles.schemeTitle}>{scheme.title}</Text>
                {scheme.isNew && (
                  <View style={styles.newBadge}>
                    <Text style={styles.newBadgeText}>‡§®‡§à</Text>
                  </View>
                )}
              </View>
              <TouchableOpacity 
                style={styles.speakerButton}
                onPress={() => speakScheme(scheme)}
              >
                <Ionicons name="volume-high" size={20} color="#16A34A" />
              </TouchableOpacity>
            </View>

            <View style={styles.categoryBadge}>
              <Text style={styles.categoryBadgeText}>{scheme.category}</Text>
            </View>

            <Text style={styles.schemeDescription}>{scheme.description}</Text>

            <View style={styles.schemeDetails}>
              <View style={styles.detailSection}>
                <Text style={styles.detailTitle}>üí∞ ‡§≤‡§æ‡§≠:</Text>
                <Text style={styles.detailText}>{scheme.benefits}</Text>
              </View>

              <View style={styles.detailSection}>
                <Text style={styles.detailTitle}>‚úÖ ‡§™‡§æ‡§§‡•ç‡§∞‡§§‡§æ:</Text>
                <Text style={styles.detailText}>{scheme.eligibility}</Text>
              </View>

              <View style={styles.detailSection}>
                <Text style={styles.detailTitle}>üìÑ ‡§ú‡§∞‡•Ç‡§∞‡•Ä ‡§¶‡§∏‡•ç‡§§‡§æ‡§µ‡•á‡§ú:</Text>
                {scheme.documents.map((doc, index) => (
                  <Text key={index} style={styles.documentItem}>‚Ä¢ {doc}</Text>
                ))}
              </View>
            </View>

            <View style={styles.schemeActions}>
              <TouchableOpacity style={styles.applyButton}>
                <Ionicons name="link" size={16} color="white" />
                <Text style={styles.applyButtonText}>‡§Ü‡§µ‡•á‡§¶‡§® ‡§ï‡§∞‡•á‡§Ç</Text>
              </TouchableOpacity>
              <TouchableOpacity style={styles.shareButton}>
                <Ionicons name="share" size={16} color="#16A34A" />
                <Text style={styles.shareButtonText}>‡§∏‡§æ‡§ù‡§æ ‡§ï‡§∞‡•á‡§Ç</Text>
              </TouchableOpacity>
            </View>
          </View>
        ))}
      </View>

      {/* Help Section */}
      <View style={styles.section}>
        <View style={styles.helpCard}>
          <Text style={styles.helpTitle}>‡§∏‡§π‡§æ‡§Ø‡§§‡§æ ‡§ö‡§æ‡§π‡§ø‡§è?</Text>
          <Text style={styles.helpText}>‡§π‡§Æ‡§æ‡§∞‡•á ‡§è‡§ï‡•ç‡§∏‡§™‡§∞‡•ç‡§ü ‡§∏‡•á ‡§¨‡§æ‡§§ ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§Ø‡•ã‡§ú‡§®‡§æ‡§ì‡§Ç ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§µ‡§ø‡§∏‡•ç‡§§‡§æ‡§∞ ‡§∏‡•á ‡§ú‡§æ‡§®‡•á‡§Ç</Text>
          <TouchableOpacity style={styles.helpButton}>
            <Ionicons name="call" size={18} color="white" />
            <Text style={styles.helpButtonText}>‡§π‡•á‡§≤‡•ç‡§™‡§≤‡§æ‡§á‡§®: 1800-123-4567</Text>
          </TouchableOpacity>
        </View>
      </View>
    </ScrollView>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#F9FAFB',
  },
  header: {
    padding: 20,
    paddingTop: 60,
    backgroundColor: 'white',
  },
  title: {
    fontSize: 28,
    fontWeight: 'bold',
    color: '#1F2937',
  },
  subtitle: {
    fontSize: 16,
    color: '#6B7280',
    marginTop: 4,
  },
  section: {
    margin: 20,
    marginTop: 0,
  },
  sectionTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#1F2937',
    marginBottom: 12,
    marginTop: 20,
  },
  categoryScroll: {
    marginTop: 8,
  },
  categoryChip: {
    paddingHorizontal: 16,
    paddingVertical: 8,
    backgroundColor: '#F3F4F6',
    borderRadius: 20,
    marginRight: 8,
  },
  selectedCategoryChip: {
    backgroundColor: '#22C55E',
  },
  categoryText: {
    fontSize: 14,
    fontWeight: '500',
    color: '#4B5563',
  },
  selectedCategoryText: {
    color: 'white',
  },
  schemeCard: {
    backgroundColor: 'white',
    padding: 20,
    borderRadius: 16,
    marginBottom: 16,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 4 },
    shadowOpacity: 0.1,
    shadowRadius: 8,
    elevation: 5,
  },
  schemeHeader: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'flex-start',
    marginBottom: 12,
  },
  schemeTitleContainer: {
    flex: 1,
  },
  schemeTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#1F2937',
    lineHeight: 24,
  },
  newBadge: {
    backgroundColor: '#EF4444',
    paddingHorizontal: 8,
    paddingVertical: 2,
    borderRadius: 8,
    alignSelf: 'flex-start',
    marginTop: 4,
  },
  newBadgeText: {
    color: 'white',
    fontSize: 10,
    fontWeight: 'bold',
  },
  speakerButton: {
    padding: 8,
    backgroundColor: '#F0FDF4',
    borderRadius: 20,
  },
  categoryBadge: {
    backgroundColor: '#DBEAFE',
    paddingHorizontal: 12,
    paddingVertical: 4,
    borderRadius: 12,
    alignSelf: 'flex-start',
    marginBottom: 12,
  },
  categoryBadgeText: {
    color: '#1E40AF',
    fontSize: 12,
    fontWeight: '600',
  },
  schemeDescription: {
    fontSize: 14,
    color: '#4B5563',
    lineHeight: 20,
    marginBottom: 16,
  },
  schemeDetails: {
    marginBottom: 16,
  },
  detailSection: {
    marginBottom: 12,
  },
  detailTitle: {
    fontSize: 14,
    fontWeight: 'bold',
    color: '#1F2937',
    marginBottom: 4,
  },
  detailText: {
    fontSize: 14,
    color: '#4B5563',
    lineHeight: 18,
  },
  documentItem: {
    fontSize: 12,
    color: '#6B7280',
    marginLeft: 8,
    marginBottom: 2,
  },
  schemeActions: {
    flexDirection: 'row',
    justifyContent: 'space-between',
  },
  applyButton: {
    backgroundColor: '#16A34A',
    flexDirection: 'row',
    alignItems: 'center',
    paddingHorizontal: 16,
    paddingVertical: 10,
    borderRadius: 8,
    flex: 1,
    marginRight: 8,
    justifyContent: 'center',
  },
  applyButtonText: {
    color: 'white',
    fontSize: 14,
    fontWeight: '600',
    marginLeft: 6,
  },
  shareButton: {
    borderWidth: 1,
    borderColor: '#16A34A',
    flexDirection: 'row',
    alignItems: 'center',
    paddingHorizontal: 16,
    paddingVertical: 10,
    borderRadius: 8,
    justifyContent: 'center',
  },
  shareButtonText: {
    color: '#16A34A',
    fontSize: 14,
    fontWeight: '600',
    marginLeft: 6,
  },
  helpCard: {
    backgroundColor: '#FEF3C7',
    padding: 20,
    borderRadius: 16,
    marginTop: 20,
    marginBottom: 40,
  },
  helpTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#92400E',
    marginBottom: 8,
  },
  helpText: {
    fontSize: 14,
    color: '#A16207',
    lineHeight: 20,
    marginBottom: 16,
  },
  helpButton: {
    backgroundColor: '#D97706',
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'center',
    paddingVertical: 12,
    borderRadius: 8,
  },
  helpButtonText: {
    color: 'white',
    fontSize: 14,
    fontWeight: '600',
    marginLeft: 8,
  },
});